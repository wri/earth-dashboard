define(["./GeometryOffsetAttribute-def3b741","./arrayRemoveDuplicates-0f62a181","./Transforms-a73b3b3b","./Cartesian2-8417ca3d","./Check-d18af7c4","./ComponentDatatype-9204e9f6","./PolylineVolumeGeometryLibrary-66348bfe","./CorridorGeometryLibrary-703fe5ba","./when-208fe5b0","./GeometryAttribute-04a19cfe","./GeometryAttributes-b0b294d8","./IndexDatatype-d47ad6f6","./Math-4e53b694","./PolygonPipeline-4d0ff0fe","./VertexFormat-e8cbf5b3","./RuntimeError-7f634f5d","./WebGLConstants-76bb35d1","./EllipsoidTangentPlane-9123a53b","./IntersectionTests-7d224a2f","./Plane-4aa8974d","./PolylinePipeline-28f5feec","./EllipsoidGeodesic-8015072b","./EllipsoidRhumbLine-28521929"],(function(t,e,r,a,i,o,n,s,l,d,u,m,f,y,p,c,h,g,b,C,v,A,_){"use strict";var w=new a.Cartesian3,T=new a.Cartesian3,G=new a.Cartesian3,E=new a.Cartesian3,V=new a.Cartesian3,F=new a.Cartesian3,L=new a.Cartesian3,P=new a.Cartesian3;function x(t,e){for(var r=0;r<t.length;r++)t[r]=e.scaleToGeodeticSurface(t[r],t[r]);return t}function N(t,e,r,i,o,n){var l=t.normals,d=t.tangents,u=t.bitangents;t=a.Cartesian3.normalize(a.Cartesian3.cross(r,e,L),L);n.normal&&s.CorridorGeometryLibrary.addAttribute(l,e,i,o),n.tangent&&s.CorridorGeometryLibrary.addAttribute(d,t,i,o),n.bitangent&&s.CorridorGeometryLibrary.addAttribute(u,r,i,o)}function D(t,e,r){var i,n=t.positions,y=t.corners,p=t.endPositions,c=t.lefts,h=t.normals,g=new u.GeometryAttributes,b=0,C=0,v=0;for(K=0;K<n.length;K+=2)b+=i=n[K].length-3,v+=2*i,C+=n[K+1].length-3;for(b+=3,C+=3,K=0;K<y.length;K++){var A=y[K],_=y[K].leftPositions;l.defined(_)?b+=i=_.length:C+=i=y[K].rightPositions.length,v+=i}var V,x=l.defined(p);x&&(b+=V=p[0].length-3,C+=V,v+=6*(V/=3));t=b+C;var D,M,O,I,S=new Float64Array(t),R={normals:e.normal?new Float32Array(t):void 0,tangents:e.tangent?new Float32Array(t):void 0,bitangents:e.bitangent?new Float32Array(t):void 0},k=0,H=t-1,z=w,U=T,B=V/2,Y=m.IndexDatatype.createTypedArray(t/3,v),W=0;if(x)for(var q=G,J=E,j=p[0],K=(z=a.Cartesian3.fromArray(h,0,z),U=a.Cartesian3.fromArray(c,0,U),0);K<B;K++)q=a.Cartesian3.fromArray(j,3*(B-1-K),q),J=a.Cartesian3.fromArray(j,3*(B+K),J),s.CorridorGeometryLibrary.addAttribute(S,J,k),s.CorridorGeometryLibrary.addAttribute(S,q,void 0,H),N(R,z,U,k,H,e),I=1+(M=k/3),O=(D=(H-2)/3)-1,Y[W++]=D,Y[W++]=M,Y[W++]=O,Y[W++]=O,Y[W++]=M,Y[W++]=I,k+=3,H-=3;var Q,X,Z=0,$=0,tt=n[Z++],et=n[Z++];for(S.set(tt,k),S.set(et,H-et.length+1),U=a.Cartesian3.fromArray(c,$,U),i=et.length-3,K=0;K<i;K+=3)Q=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(tt,K,L),L),X=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,i-K,P),P),N(R,z=a.Cartesian3.normalize(a.Cartesian3.add(Q,X,z),z),U,k,H,e),I=1+(M=k/3),O=(D=(H-2)/3)-1,Y[W++]=D,Y[W++]=M,Y[W++]=O,Y[W++]=O,Y[W++]=M,Y[W++]=I,k+=3,H-=3;for(Q=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(tt,i,L),L),X=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,i,P),P),z=a.Cartesian3.normalize(a.Cartesian3.add(Q,X,z),z),$+=3,K=0;K<y.length;K++){var rt,at,it,ot=(A=y[K]).leftPositions,nt=A.rightPositions,st=F,lt=G,dt=E;if(z=a.Cartesian3.fromArray(h,$,z),l.defined(ot)){for(N(R,z,U,void 0,H,e),H-=3,at=I,it=O,rt=0;rt<ot.length/3;rt++)st=a.Cartesian3.fromArray(ot,3*rt,st),Y[W++]=at,Y[W++]=it-rt-1,Y[W++]=it-rt,s.CorridorGeometryLibrary.addAttribute(S,st,void 0,H),lt=a.Cartesian3.fromArray(S,3*(it-rt-1),lt),dt=a.Cartesian3.fromArray(S,3*at,dt),N(R,z,U=a.Cartesian3.normalize(a.Cartesian3.subtract(lt,dt,U),U),void 0,H,e),H-=3;st=a.Cartesian3.fromArray(S,3*at,st),lt=a.Cartesian3.subtract(a.Cartesian3.fromArray(S,3*it,lt),st,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(S,3*(it-rt),dt),st,dt),N(R,z,U=a.Cartesian3.normalize(a.Cartesian3.add(lt,dt,U),U),k,void 0,e),k+=3}else{for(N(R,z,U,k,void 0,e),k+=3,at=O,it=I,rt=0;rt<nt.length/3;rt++)st=a.Cartesian3.fromArray(nt,3*rt,st),Y[W++]=at,Y[W++]=it+rt,Y[W++]=it+rt+1,s.CorridorGeometryLibrary.addAttribute(S,st,k),lt=a.Cartesian3.fromArray(S,3*at,lt),dt=a.Cartesian3.fromArray(S,3*(it+rt),dt),N(R,z,U=a.Cartesian3.normalize(a.Cartesian3.subtract(lt,dt,U),U),k,void 0,e),k+=3;st=a.Cartesian3.fromArray(S,3*at,st),lt=a.Cartesian3.subtract(a.Cartesian3.fromArray(S,3*(it+rt),lt),st,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(S,3*it,dt),st,dt),N(R,z,U=a.Cartesian3.normalize(a.Cartesian3.negate(a.Cartesian3.add(dt,lt,U),U),U),void 0,H,e),H-=3}for(tt=n[Z++],et=n[Z++],tt.splice(0,3),et.splice(et.length-3,3),S.set(tt,k),S.set(et,H-et.length+1),i=et.length-3,$+=3,U=a.Cartesian3.fromArray(c,$,U),rt=0;rt<et.length;rt+=3)Q=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(tt,rt,L),L),X=r.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,i-rt,P),P),N(R,z=a.Cartesian3.normalize(a.Cartesian3.add(Q,X,z),z),U,k,H,e),M=(I=k/3)-1,Y[W++]=D=1+(O=(H-2)/3),Y[W++]=M,Y[W++]=O,Y[W++]=O,Y[W++]=M,Y[W++]=I,k+=3,H-=3;k-=3,H+=3}if(N(R,z=a.Cartesian3.fromArray(h,h.length-3,z),U,k,H,e),x){k+=3,H-=3,q=G,J=E;var ut=p[1];for(K=0;K<B;K++)q=a.Cartesian3.fromArray(ut,3*(V-K-1),q),J=a.Cartesian3.fromArray(ut,3*K,J),s.CorridorGeometryLibrary.addAttribute(S,q,void 0,H),s.CorridorGeometryLibrary.addAttribute(S,J,k),N(R,z,U,k,H,e),M=(I=k/3)-1,Y[W++]=D=1+(O=(H-2)/3),Y[W++]=M,Y[W++]=O,Y[W++]=O,Y[W++]=M,Y[W++]=I,k+=3,H-=3}if(g.position=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:S}),e.st){var mt=new Float32Array(t/3*2),ft=0;if(x){b/=3,C/=3;var yt,pt=Math.PI/(V+1),ct=1/(b-V+1),ht=1/(C-V+1),gt=V/2;for(K=1+gt;K<V+1;K++)yt=f.CesiumMath.PI_OVER_TWO+pt*K,mt[ft++]=ht*(1+Math.cos(yt)),mt[ft++]=.5*(1+Math.sin(yt));for(K=1;K<C-V+1;K++)mt[ft++]=K*ht,mt[ft++]=0;for(K=V;gt<K;K--)yt=f.CesiumMath.PI_OVER_TWO-K*pt,mt[ft++]=1-ht*(1+Math.cos(yt)),mt[ft++]=.5*(1+Math.sin(yt));for(K=gt;0<K;K--)yt=f.CesiumMath.PI_OVER_TWO-pt*K,mt[ft++]=1-ct*(1+Math.cos(yt)),mt[ft++]=.5*(1+Math.sin(yt));for(K=b-V;0<K;K--)mt[ft++]=K*ct,mt[ft++]=1;for(K=1;K<1+gt;K++)yt=f.CesiumMath.PI_OVER_TWO+pt*K,mt[ft++]=ct*(1+Math.cos(yt)),mt[ft++]=.5*(1+Math.sin(yt))}else{for(ct=1/((b/=3)-1),ht=1/((C/=3)-1),K=0;K<C;K++)mt[ft++]=K*ht,mt[ft++]=0;for(K=b;0<K;K--)mt[ft++]=(K-1)*ct,mt[ft++]=1}g.st=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:mt})}return e.normal&&(g.normal=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:R.normals})),e.tangent&&(g.tangent=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:R.tangents})),e.bitangent&&(g.bitangent=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:R.bitangents})),{attributes:g,indices:Y}}function M(t,e,r){r[e++]=t[0],r[e++]=t[1],r[e++]=t[2];for(var a=3;a<t.length;a+=3){var i=t[a],o=t[a+1],n=t[a+2];r[e++]=i,r[e++]=o,r[e++]=n,r[e++]=i,r[e++]=o,r[e++]=n}return r[e++]=t[0],r[e++]=t[1],r[e++]=t[2],r}var O=new a.Cartesian3,I=new a.Cartesian3,S=new a.Cartographic;function R(t,e,r,i,o,n){var s=a.Cartesian3.subtract(e,t,O);a.Cartesian3.normalize(s,s);var l=r.geodeticSurfaceNormal(t,I),d=a.Cartesian3.cross(s,l,O);a.Cartesian3.multiplyByScalar(d,i,d);var u=o.latitude,m=o.longitude;e=n.latitude,s=n.longitude;a.Cartesian3.add(t,d,I),r.cartesianToCartographic(I,S),l=S.latitude,i=S.longitude,u=Math.min(u,l),m=Math.min(m,i),e=Math.max(e,l),s=Math.max(s,i),a.Cartesian3.subtract(t,d,I),r.cartesianToCartographic(I,S),l=S.latitude,i=S.longitude,u=Math.min(u,l),m=Math.min(m,i),e=Math.max(e,l),s=Math.max(s,i),o.latitude=u,o.longitude=m,n.latitude=e,n.longitude=s}var k=new a.Cartesian3,H=new a.Cartesian3,z=new a.Cartographic,U=new a.Cartographic;function B(t,r,i,o,s){t=x(t,r);var d=e.arrayRemoveDuplicates(t,a.Cartesian3.equalsEpsilon),u=d.length;if(u<2||i<=0)return new a.Rectangle;var m,f,y=.5*i;z.latitude=Number.POSITIVE_INFINITY,z.longitude=Number.POSITIVE_INFINITY,U.latitude=Number.NEGATIVE_INFINITY,U.longitude=Number.NEGATIVE_INFINITY,o===n.CornerType.ROUNDED&&(c=d[0],a.Cartesian3.subtract(c,d[1],k),a.Cartesian3.normalize(k,k),a.Cartesian3.multiplyByScalar(k,y,k),a.Cartesian3.add(c,k,H),r.cartesianToCartographic(H,S),m=S.latitude,f=S.longitude,z.latitude=Math.min(z.latitude,m),z.longitude=Math.min(z.longitude,f),U.latitude=Math.max(U.latitude,m),U.longitude=Math.max(U.longitude,f));for(var p=0;p<u-1;++p)R(d[p],d[p+1],r,y,z,U);var c=d[u-1];return a.Cartesian3.subtract(c,d[u-2],k),a.Cartesian3.normalize(k,k),a.Cartesian3.multiplyByScalar(k,y,k),a.Cartesian3.add(c,k,H),R(c,H,r,y,z,U),o===n.CornerType.ROUNDED&&(r.cartesianToCartographic(H,S),m=S.latitude,f=S.longitude,z.latitude=Math.min(z.latitude,m),z.longitude=Math.min(z.longitude,f),U.latitude=Math.max(U.latitude,m),U.longitude=Math.max(U.longitude,f)),(s=l.defined(s)?s:new a.Rectangle).north=U.latitude,s.south=z.latitude,s.east=U.longitude,s.west=z.longitude,s}function Y(t){var e=(t=l.defaultValue(t,l.defaultValue.EMPTY_OBJECT)).positions,r=t.width,i=l.defaultValue(t.height,0),o=l.defaultValue(t.extrudedHeight,i);this._positions=e,this._ellipsoid=a.Ellipsoid.clone(l.defaultValue(t.ellipsoid,a.Ellipsoid.WGS84)),this._vertexFormat=p.VertexFormat.clone(l.defaultValue(t.vertexFormat,p.VertexFormat.DEFAULT)),this._width=r,this._height=Math.max(i,o),this._extrudedHeight=Math.min(i,o),this._cornerType=l.defaultValue(t.cornerType,n.CornerType.ROUNDED),this._granularity=l.defaultValue(t.granularity,f.CesiumMath.RADIANS_PER_DEGREE),this._shadowVolume=l.defaultValue(t.shadowVolume,!1),this._workerName="createCorridorGeometry",this._offsetAttribute=t.offsetAttribute,this._rectangle=void 0,this.packedLength=1+e.length*a.Cartesian3.packedLength+a.Ellipsoid.packedLength+p.VertexFormat.packedLength+7}Y.pack=function(t,e,r){r=l.defaultValue(r,0);var i=t._positions,o=i.length;e[r++]=o;for(var n=0;n<o;++n,r+=a.Cartesian3.packedLength)a.Cartesian3.pack(i[n],e,r);return a.Ellipsoid.pack(t._ellipsoid,e,r),r+=a.Ellipsoid.packedLength,p.VertexFormat.pack(t._vertexFormat,e,r),r+=p.VertexFormat.packedLength,e[r++]=t._width,e[r++]=t._height,e[r++]=t._extrudedHeight,e[r++]=t._cornerType,e[r++]=t._granularity,e[r++]=t._shadowVolume?1:0,e[r]=l.defaultValue(t._offsetAttribute,-1),e};var W=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),q=new p.VertexFormat,J={positions:void 0,ellipsoid:W,vertexFormat:q,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,shadowVolume:void 0,offsetAttribute:void 0};return Y.unpack=function(t,e,r){e=l.defaultValue(e,0);for(var i=t[e++],o=new Array(i),n=0;n<i;++n,e+=a.Cartesian3.packedLength)o[n]=a.Cartesian3.unpack(t,e);var s=a.Ellipsoid.unpack(t,e,W);e+=a.Ellipsoid.packedLength;var d=p.VertexFormat.unpack(t,e,q);e+=p.VertexFormat.packedLength;var u=t[e++],m=t[e++],f=t[e++],y=t[e++],c=t[e++],h=1===t[e++],g=t[e];return l.defined(r)?(r._positions=o,r._ellipsoid=a.Ellipsoid.clone(s,r._ellipsoid),r._vertexFormat=p.VertexFormat.clone(d,r._vertexFormat),r._width=u,r._height=m,r._extrudedHeight=f,r._cornerType=y,r._granularity=c,r._shadowVolume=h,r._offsetAttribute=-1===g?void 0:g,r):(J.positions=o,J.width=u,J.height=m,J.extrudedHeight=f,J.cornerType=y,J.granularity=c,J.shadowVolume=h,J.offsetAttribute=-1===g?void 0:g,new Y(J))},Y.computeRectangle=function(t,e){var r=(t=l.defaultValue(t,l.defaultValue.EMPTY_OBJECT)).positions,i=t.width;return B(r,l.defaultValue(t.ellipsoid,a.Ellipsoid.WGS84),i,l.defaultValue(t.cornerType,n.CornerType.ROUNDED),e)},Y.createGeometry=function(i){var n=i._positions,u=i._width,c=i._ellipsoid,h=(n=x(n,c),e.arrayRemoveDuplicates(n,a.Cartesian3.equalsEpsilon));if(!(h.length<2||u<=0)){var g,b=i._height,C=i._extrudedHeight,v=!f.CesiumMath.equalsEpsilon(b,C,0,f.CesiumMath.EPSILON2);n=i._vertexFormat,u={ellipsoid:c,positions:h,width:u,cornerType:i._cornerType,granularity:i._granularity,saveAttributes:!0};v?(u.height=b,u.extrudedHeight=C,u.shadowVolume=i._shadowVolume,u.offsetAttribute=i._offsetAttribute,g=function(e,r){var i=new p.VertexFormat({position:r.position,normal:r.normal||r.bitangent||e.shadowVolume,tangent:r.tangent,bitangent:r.normal||r.bitangent,st:r.st}),n=e.ellipsoid,u=D(s.CorridorGeometryLibrary.computePositions(e),i,n),f=e.height,c=e.extrudedHeight,h=u.attributes,g=u.indices,b=h.position.values,C=b.length,v=new Float64Array(6*C);(i=new Float64Array(C)).set(b),u=new Float64Array(4*C),u=M(b=y.PolygonPipeline.scaleToGeodeticHeight(b,f,n),0,u),u=M(i=y.PolygonPipeline.scaleToGeodeticHeight(i,c,n),2*C,u),v.set(b),v.set(i,C),v.set(u,2*C),h.position.values=v,h=function(t,e){if(!(e.normal||e.tangent||e.bitangent||e.st))return t;var r,i=t.position.values;(e.normal||e.bitangent)&&(r=t.normal.values,u=t.bitangent.values);var o=t.position.values.length/18,n=3*o,l=2*o,d=2*n;if(e.normal||e.bitangent||e.tangent){for(var u,m=e.normal?new Float32Array(6*n):void 0,f=e.tangent?new Float32Array(6*n):void 0,y=e.bitangent?new Float32Array(6*n):void 0,p=w,c=T,h=G,g=E,b=V,C=F,v=d,A=0;A<n;A+=3){var _=v+d;p=a.Cartesian3.fromArray(i,A,p),c=a.Cartesian3.fromArray(i,A+n,c),h=a.Cartesian3.fromArray(i,(A+3)%n,h),c=a.Cartesian3.subtract(c,p,c),h=a.Cartesian3.subtract(h,p,h),g=a.Cartesian3.normalize(a.Cartesian3.cross(c,h,g),g),e.normal&&(s.CorridorGeometryLibrary.addAttribute(m,g,_),s.CorridorGeometryLibrary.addAttribute(m,g,_+3),s.CorridorGeometryLibrary.addAttribute(m,g,v),s.CorridorGeometryLibrary.addAttribute(m,g,v+3)),(e.tangent||e.bitangent)&&(C=a.Cartesian3.fromArray(r,A,C),e.bitangent&&(s.CorridorGeometryLibrary.addAttribute(y,C,_),s.CorridorGeometryLibrary.addAttribute(y,C,_+3),s.CorridorGeometryLibrary.addAttribute(y,C,v),s.CorridorGeometryLibrary.addAttribute(y,C,v+3)),e.tangent&&(b=a.Cartesian3.normalize(a.Cartesian3.cross(C,g,b),b),s.CorridorGeometryLibrary.addAttribute(f,b,_),s.CorridorGeometryLibrary.addAttribute(f,b,_+3),s.CorridorGeometryLibrary.addAttribute(f,b,v),s.CorridorGeometryLibrary.addAttribute(f,b,v+3))),v+=6}if(e.normal){for(m.set(r),A=0;A<n;A+=3)m[A+n]=-r[A],m[A+n+1]=-r[A+1],m[A+n+2]=-r[A+2];t.normal.values=m}else t.normal=void 0;e.bitangent?(y.set(u),y.set(u,n),t.bitangent.values=y):t.bitangent=void 0,e.tangent&&(u=t.tangent.values,f.set(u),f.set(u,n),t.tangent.values=f)}if(e.st){var L=t.st.values,P=new Float32Array(6*l);P.set(L),P.set(L,l);for(var x=2*l,N=0;N<2;N++){for(P[x++]=L[0],P[x++]=L[1],A=2;A<l;A+=2){var D=L[A],M=L[A+1];P[x++]=D,P[x++]=M,P[x++]=D,P[x++]=M}P[x++]=L[0],P[x++]=L[1]}t.st.values=P}return t}(h,r);var A=C/3;if(e.shadowVolume){for(var _=h.normal.values,L=(C=_.length,u=new Float32Array(6*C),0);L<C;L++)_[L]=-_[L];u.set(_,C),u=M(_,4*C,u),h.extrudeDirection=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:u}),r.normal||(h.normal=void 0)}l.defined(e.offsetAttribute)&&(r=new Uint8Array(6*A),r=e.offsetAttribute===t.GeometryOffsetAttribute.TOP?(r=t.arrayFill(r,1,0,A),t.arrayFill(r,1,2*A,4*A)):(e=e.offsetAttribute===t.GeometryOffsetAttribute.NONE?0:1,t.arrayFill(r,e)),h.applyOffset=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:r}));var P=g.length,x=A+A,N=m.IndexDatatype.createTypedArray(v.length/3,2*P+3*x);N.set(g);var O,I,S,R,k=P;for(L=0;L<P;L+=3){var H=g[L],z=g[L+1],U=g[L+2];N[k++]=U+A,N[k++]=z+A,N[k++]=H+A}for(L=0;L<x;L+=2)S=(O=L+x)+1,R=(I=O+x)+1,N[k++]=O,N[k++]=I,N[k++]=S,N[k++]=S,N[k++]=I,N[k++]=R;return{attributes:h,indices:N}}(u,n)):((g=D(s.CorridorGeometryLibrary.computePositions(u),n,c)).attributes.position.values=y.PolygonPipeline.scaleToGeodeticHeight(g.attributes.position.values,b,c),l.defined(i._offsetAttribute)&&(A=i._offsetAttribute===t.GeometryOffsetAttribute.NONE?0:1,_=g.attributes.position.values.length,_=new Uint8Array(_/3),t.arrayFill(_,A),g.attributes.applyOffset=new d.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:_})));var A=g.attributes,_=r.BoundingSphere.fromVertices(A.position.values,void 0,3);return n.position||(g.attributes.position.values=void 0),new d.Geometry({attributes:A,indices:g.indices,primitiveType:d.PrimitiveType.TRIANGLES,boundingSphere:_,offsetAttribute:i._offsetAttribute})}},Y.createShadowVolume=function(t,e,r){var a=t._granularity,i=t._ellipsoid;e=e(a,i),r=r(a,i);return new Y({positions:t._positions,width:t._width,cornerType:t._cornerType,ellipsoid:i,granularity:a,extrudedHeight:e,height:r,vertexFormat:p.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(Y.prototype,{rectangle:{get:function(){return l.defined(this._rectangle)||(this._rectangle=B(this._positions,this._ellipsoid,this._width,this._cornerType)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return[0,0,0,1,1,0]}}}),function(t,e){return(t=l.defined(e)?Y.unpack(t,e):t)._ellipsoid=a.Ellipsoid.clone(t._ellipsoid),Y.createGeometry(t)}}));