/* ==========================================================================
   #SPACINGS
   ========================================================================== */

/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-padding-horizontal {}
 *   .u-padding-vertical-small {}
 */
@use "sass:map";

$spacing-directions: (
  null: null,
  "-top": "-top",
  "-right": "-right",
  "-bottom": "-bottom",
  "-left": "-left",
  "-horizontal": "-left" "-right",
  "-vertical": "-top" "-bottom"
) !default;

$spacing-properties: (
  "padding": "padding",
  "margin": "margin"
) !default;

$spacing-sizes: (
  null: $global-spacing-unit,
  "-xxs": $global-spacing-unit-xxs,
  "-xs": $global-spacing-unit-xs,
  "-s": $global-spacing-unit-s,
  "-m": $global-spacing-unit,
  "-l": $global-spacing-unit-l,
  "-xl": $global-spacing-unit-xl,
  "-none": 0,
  "-auto": auto
) !default;

$spacing-sizes-mobile: (
  null: $global-spacing-unit,
  "-xxs": $global-spacing-unit-xxs-mobile,
  "-xs": $global-spacing-unit-xs-mobile,
  "-s": $global-spacing-unit-s-mobile,
  "-m": $global-spacing-unit-mobile,
  "-l": $global-spacing-unit-l-mobile,
  "-xl": $global-spacing-unit-xl-mobile,
  "-none": 0,
  "-auto": auto
) !default;

@each $property-namespace, $property in $spacing-properties {
  @each $direction-namespace, $direction-rules in $spacing-directions {
    @each $size-namespace, $size in $spacing-sizes {
      .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {
        @each $direction in $direction-rules {
          #{$property}#{$direction}: $size !important; /* stylelint-disable-line declaration-no-important */

          @media screen and (max-width: $global-breakpoint-md) {
            #{$property}#{$direction}: map.get(
              $spacing-sizes-mobile,
              $size-namespace
            ) !important; /* stylelint-disable-line declaration-no-important */
          }
        }
      }
    }
  }
}
